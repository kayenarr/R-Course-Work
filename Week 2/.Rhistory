plot (1,2,3,4)
plot
plot (xlim=100, 1,2,3,4,5)
getwd()
q()
x<-matrix(rnorm(200,50,4)
)
x
x<-matrix(rnorm(200),50,4)
x
apply(x,c(1,2),mean)
apply(x,c(1,2),mean)
apply(x,1,mean)
apply(x,2,mean)
rowMeans(x,2)
rowMeans(x)
colMeans(x)
x<-c(rnorm(10),runif(10),rnorm(10,1))
x
f<-gl(3,10)
f
tapply(x,1,mean)
tapply(x,f,mean)
tapply(x,f=1,mean)
tapply(x,f==1,mean)
tapply(x,f==2,mean)
tapply(x,f==0,mean)
tapply(x,f==1:3,mean)
tapply(x,f,mean)
tapply(x,f,sumn)
tapply(x,f,sum)
x
split(x,f)
y<split(x,f)
y<-split(x,f)
y
lapply(y[1],mean)
lapply(y[1:3],mean)
tapply(x,f,mean)
lapply(split(x,f),mean)
lapply(split(x[1],f),mean)
lapply(split(x,f[1]),mean)
lapply(split(x,f[1:3]),mean)
lapply(split(x,f[3]),mean)
lapply(split(x,f),mean)
sapply(split(x,f),mean)
traceback()
lapply(y[1:3],mean)
lapply(split(x,f[3]),mean)
tapply(x,f==0,mean)
plot (xlim=100, 1,2,3,4,5)
traceback()
library(datasets)
data(mtcars)
data
mtcars
sapply(split(mtcars$hp,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl==4),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]-sapply(split(mtcars$hp,mtcars$cyl),mean)[2]
sapply(split(mtcars$hp,mtcars$cyl),mean)mtcars$cyl==4-sapply(split(mtcars$hp,mtcars$cyl),mean)[2]
sapply(split(mtcars$hp,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)mtcars$cyl==4-sapply(split(mtcars$hp,mtcars$cyl),mean)[3]
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]-sapply(split(mtcars$hp,mtcars$cyl),mean)[3]
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]-sapply(split(mtcars$hp,mtcars$cyl),mean)[3]
lapply(split(mtcars$hp,mtcars$cyl),mean)[1]-lapply(split(mtcars$hp,mtcars$cyl),mean)[3]
lapply(split(mtcars$hp,mtcars$cyl),mean)[[1]]-lapply(split(mtcars$hp,mtcars$cyl),mean)[[3]]
sapply(split(mtcars$hp,mtcars$cyl),mean)$4-sapply(split(mtcars$hp,mtcars$cyl),mean)$8
abs(lapply(split(mtcars$hp,mtcars$cyl),mean)[[1]]-lapply(split(mtcars$hp,mtcars$cyl),mean)[[3]])
library(datasets)
data(iris)
iris
iris$Spe=="virginica"
iris$Sepal[iris$spe=="virginica"]
iris$Sepal[[iris$spe=="virginica"]]
iris$Sepal
iris
iris$Sepal
iris$Sepal.Length
iris$Sepal.Length[[iris$spe=="virginica"]]
iris$Sepal.Length[[iris$species=="virginica"]]
tapply(iris$Sepal.Length,"virginica",mean)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,1:4]),2,mean)
apply(iris[, 1:4]),2,mean)
colMean(iris)
apply(iris[, 1:4]),1,mean)
apply(iris[, 1:4],2,mean)
apply(iris[, 1:4],1,mean)
mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
abs(lapply(split(mtcars$hp,mtcars$cyl),mean)[[1]]-lapply(split(mtcars$hp,mtcars$cyl),mean)[[3]])
q()
dir()
getwd()
package ? Lattice
package ? lattice
package?lattice
?Lattice
?lattice
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(environmental)
head(environmental)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
source('~/.active-rstudio-document', echo=TRUE)
equal.count(environmental$temperature,4)
equal.count(1:100,4)
shingles[1]
shingles
shingle
shingle[1]
shingle()
temp.cut<-equal.count(environmental$temperature,4)
temp.cut
shingle(temp.cut)
shingle(1:100)
shingle(1:100,4)
temp.cut
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T")
temp.cut<-equal.count(environmental$temperature,4,layout=c(1,4))
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T", layout=c(1,4))
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T", layout=c(1,4),as.table=TRUE)
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE)
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T", layout=c(4,1))
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,col="CYAN")
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE,
+        panel=function(x,y,...) {
+            panel.xyplot(x,y,...)
+            fit<-lm(y~x)
+            panel.abline(fit,col="CYAN")
+        })
>
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,col="CYAN")
})
xyplot(y~x,type="n")
xyplot(y~x|temp.cut,type="n")
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE, pch=20,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,col="CYAN")
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, main="O vs R based on T",as.table=TRUE, pch=20,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.lowess(x,y)
}, xlab="Solar Radiation", ylab="Ozone(ppb)",main="Ozone vs. Radiation by Temp")
xyplot(ozone ~ radiation | temp.cut, data=environmental,as.table=TRUE, pch=20,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.lowess(x,y)
}, xlab="Solar Radiation", ylab="Ozone(ppb)",main="Ozone vs. Radiation by Temp")
xyplot(ozone ~ radiation | temp.cut, data=environmental,as.table=TRUE, pch=20,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.loess(x,y)
}, xlab="Solar Radiation", ylab="Ozone(ppb)",main="Ozone vs. Radiation by Temp")
wind.cut=equal.count(environmental$wind,4)
wind.cut
xyplot(ozone ~ radiation | temp.cut * wind.cut, data=environmental,as.table=TRUE, pch=20,
panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.loess(x,y)
}, xlab="Solar Radiation", ylab="Ozone(ppb)",main="Ozone vs. Radiation by Temp")
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
splom(~ environmental)
histogram(temperature, data=environmental)
histogram(~ temperature, data=environmental)
histogram(~ temperature | wind.cut, data=environmental)
histogram(~ wind | temperature.cut, data=environmental)
histogram(~ wind | temp.cut, data=environmental)
histogram(~ ozone | temp.cut, data=environmental)
histogram(~ radiation | temp.cut, data=environmental)
data(Bodyweight)
?xyplot
data(BodyWeight)
BodyWeight
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
source('F:/Coursera/R Working Dir/ComputingforDataAnalysis/Week 3/LatticeGraphicsDemo.R')
?lpoints
plot(0,0,substitute="theta")
plot(0,0,main="theta")
plot(0,0,main=substitute("theta"))
plot(0,0,main=substitute(theta))
plot(0,0,main=expression(theta))
plot(0,0,main=expression(bet))
plot(0,0,main=expression(beta))
plot(0,0,main=substitute(beta))
plot(0,0,main="theta")
plot(0,0,main=substitute(beta))
plot(0,0,main="theta")
plot(0,0,main=expression(beta))
set.seed(1)
rpois(5,2)
library(ggplot2)
install.packages()
install.packages(ggplot2)
install.packages(ggplot)
CRAN
install.packages("ggplot2")
library(ggplot2)
str(mpg)
class
str(class)
str(model)
mpg$model
str(mpg$mpdel)
str(mpg$model)
q()
dir()
q()
